# list.remove()는 값으로 삭제
# list.pop()은 인덱스로 pop
# a.copy() 대신 a[:] -> 1차원일때는 리스트 슬라이싱

# a.sort(), sorted(a) 둘다 오름차순이다
# key = lambda x : (x[0], -x[1])) // -붙이면 현재 정렬차순과 반대로
# math.floor 대신 int로 해도 소수점 버림됨

# list[1:3] -> index 1~2까지 -> 1부터 시작해서 3전까지
# range(1,3) -> 1~2까지
# dict 관련 // https://wikidocs.net/16
# from itertools import combinations, permutations
# combinations는 조합(순서고려x, 원소 중복x) permutations는 순열(순서고려o, 모든 경우의 수)
# Counter 함수
# <= >=, =가 오른쪽
# 백준 입력 받는 법 list(map(int, input().split()))
# 약수를 구하는 법
# 소수를 구하는 법 // 1은 소수가 아님

# N*M 2차원 리스트 초기화 // array = [[0]*m for _ in range(n)] // n이 행(가로줄), m이 열(세로줄)
# from collections import deque
# queue = deque() // queue.popleft()로 출력

# 리스트 뒤집기
reversed_list = list[::-1]
reversed_list = list(reversed(list))
list.reverse()

# 특수문자(', ", \) 출력
앞에 \ 붙이기

# 몫
a//b or int(a/b)
